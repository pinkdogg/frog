enclave {
    include "sgx_eid.h"
    include "datatypes.h"
    include "dh_session_protocol.h"

    trusted {
        public uint32_t ecall_create_session();
        public uint32_t ecall_transfer_secret_key();
        public uint32_t ecall_close_session();
        public void ecall_encrypt_data([user_check] uint8_t* plaintext, [user_check]uint8_t* ciphertext, uint32_t len_data);
        public void ecall_rencrypt_data([user_check] uint8_t* ciphertext, uint32_t len_data);

    };

    untrusted {
        void print_string_ocall([in, string] const char *str);
        uint32_t session_request_ocall([out] sgx_dh_msg1_t *dh_msg1,[out] uint32_t *session_id);
        uint32_t exchange_report_ocall([in] sgx_dh_msg2_t *dh_msg2, [out] sgx_dh_msg3_t *dh_msg3, uint32_t session_id);
        uint32_t send_request_ocall(uint32_t session_id, [in, size = req_message_size] secure_message_t* req_message, size_t req_message_size, size_t max_payload_size, [out, size=resp_message_size] secure_message_t* resp_message, size_t resp_message_size);
        uint32_t end_session_ocall(uint32_t session_id);
    };
};